name: Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Specify the release version'
        required: true
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # Check if workflow is triggered by workflow_dispatch
      - name: Check if manually triggered
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Manually triggered with release version: $RELEASE_VERSION"
          echo "${{ steps.tag.outputs.tag }}=$RELEASE_VERSION" >> $GITHUB_ENV
      
      # If not manually triggered, get git tag
      - name: Get git tag
        if: github.event_name != 'workflow_dispatch'
        id: tag
        uses: dawidd6/action-get-tag@v1
      
      # If not manually triggered, set release version from tag
      - name: Set release version from tag
        if: github.event_name != 'workflow_dispatch'
        run: |
          echo "Tag version: ${{ steps.tag.outputs.tag }}"
          echo "${{ steps.tag.outputs.tag }}=$RELEASE_VERSION" >> $GITHUB_ENV
          export RELEASE_VERSION="${{ steps.tag.outputs.tag }}"
      
      # Remove leading "v" from RELEASE_VERSION
      - name: Remove leading "v" from RELEASE_VERSION
        shell: bash
        env:
            RELEASE_VERSION: ${{ steps.tag.outputs.tag }}
        run: |
          RELEASE_VERSION=$(echo "${RELEASE_VERSION}" | sed 's/^v\.//')
          echo "RELEASE_VERSION after removing leading 'v': $RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          export RELEASE_VERSION
      
      - name: Verify RELEASE_VERSION
        run: |
          echo "RELEASE_VERSION after export: $RELEASE_VERSION"

      
      - name: Update Dockerfile with new version
        run: sed -i "s#VERSION_PLACEHOLDER#$RELEASE_VERSION#g" docker/Dockerfile
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: melinak
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag melinak/racoon_clip:latest \
            --tag melinak/racoon_clip:v.${RELEASE_VERSION} \
            -f docker/Dockerfile \
            .
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --tag melinak/racoon_clip:latest \
            --tag melinak/racoon_clip:v.${RELEASE_VERSION} \
            -f docker/Dockerfile \
            .
